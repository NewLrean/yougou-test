<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">





    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
    <context:component-scan base-package="yougou.shopping"/>

    <!-- 默认的注解映射的支持 默认找最新的处理器映射器，处理器适配器 -->
    <mvc:annotation-driven />


    
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀    controller方法返回值+.jsp-->

    <!-- <mvc:annotation-driven conversion-service="conversionService"/> -->
    <context:property-placeholder location="classpath:resource/*.properties"/>
		

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
        
    </bean>
    
    	<mvc:resources location="/WEB-INF/jsp/" mapping="/jsp/**"/>
   <!--  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.jzp.converter.Mycenverter"></bean>
            </set>
        </property>
    </bean> -->

    <!-- 对静态资源文件的访问  方案一 （二选一） -->
    <mvc:default-servlet-handler/>

<!-- 异常处理配置 -->
 <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">errors/error</prop>
                <prop key="java.lang.Throwable">errors/err</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="errors/error">500</prop>
                <prop key="errors/404">404</prop>
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"></property>
        <!-- 默认错误页面，当找不到上面mappings中指定的异常相应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="errors/error"></property>
        <!-- 默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"></property>
</bean>

    <!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--&lt;!&ndash; 默认编码 &ndash;&gt;-->
        <property name="defaultEncoding" value="utf-8" />
        <!--&lt;!&ndash; 文件大小最大值  5mb&ndash;&gt;-->
        <property name="maxUploadSize" value="5242880" />
        <!--&lt;!&ndash; 内存中的最大值 &ndash;&gt;-->
        <property name="maxInMemorySize" value="40960" />
    </bean>


  <!--  <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean claLoginInterceptorptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->


    <dubbo:application name="yougou-manager"/>

    <dubbo:registry protocol="zookeeper" address="localhost:2181"/>

    <dubbo:annotation package="yougou.shopping.controller"/>

</beans>